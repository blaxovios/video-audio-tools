[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "video-audio-tools"
version = "1.0.0"
dependencies = ["hatch", "tox", "numpy", "rtoml", "moviepy", "librosa", "soundfile"] 
requires-python = ">=3.12"
authors = [
  {name = "Konstantinos Skepetaris", email = "tsepe21@hotmail.com"}
]
maintainers = [
  {name = "Konstantinos Skepetaris", email = "tsepe21@hotmail.com"}
]
description = "A repository for speech removal."
readme = "README.md"
license = {file = "LICENSE.txt"}
keywords = []
classifiers = ["Programming Language :: Python"]

[project.urls]
Homepage = "https://github.com/blaxovios/video-audio-tools"
Repository = "https://github.com/blaxovios/video-audio-tools"
"Bug Tracker" = "https://github.com/blaxovios/video-audio-tools/issues"
Changelog = "https://github.com/blaxovios/video-audio-tools/CHANGELOG.md"

# ---------- HATCH ----------
[tool.hatch.build.targets.wheel]
packages = ["*"]

[tool.hatch.envs.default]
scripts = { test = "unittest" }

[tool.hatch.metadata]
upload = ["pypi"]

# ---------- RUFF ----------
[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

[tool.ruff.lint]
select = ["NPY201", "E4", "E7", "E9", "F"]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "single"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false
# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"